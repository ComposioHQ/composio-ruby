openapi: 3.0.0
info:
  title: Composio OpenAPI
  description: Generated with `routing-controllers-openapi`
  version: 1.0.0
servers:
  - url: https://backend.composio.dev
paths:
  /api/v1/client/auth/identify:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Identify client
      operationId: ClientAuthController.identifyClient
      requestBody:
        description: IdentifyClientReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifyClientReqDTO'
        required: false
      responses:
        '202':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/IdentifyClientResDTO'
  /api/v1/client/auth/google_login:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Google login
      operationId: ClientAuthController.googleLogin
      requestBody:
        description: ''
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/client/auth/track:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Track client
      operationId: ClientAuthController.trackClient
      requestBody:
        description: TrackClientReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackClientReqDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TrackClientResDTO'
  /api/v1/client/auth/send_magic_link:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Send magic link
      operationId: ClientAuthController.sendMagicLink
      requestBody:
        description: MagicLinkReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MagicLinkReqDTO'
        required: false
      responses:
        '202':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MagicLinkResDTO'
  /api/v1/client/auth/logout:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Logout API
      operationId: ClientAuthController.logout
      description: Logout the user and clear the server side session
      responses:
        '201':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/LogoutResDTO'
  /api/v1/client/auth/verify_magic_link:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Verify magic link
      operationId: ClientAuthController.verifyMagicLink
      requestBody:
        description: VerifyMagicLinkReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMagicLinkReqDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/VerifyMagicLinkResDTO'
  /api/v1/client/auth/client_info:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Client Auth
      summary: Get user info
      operationId: ClientAuthController.getUserInfo
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/client/auth/pusher_auth:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Client Auth
      summary: Pusher user auth
      operationId: ClientAuthController.pusherUserAuth
      requestBody:
        description: ''
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/client/auth/delete/{clientId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    delete:
      tags:
        - Client Auth
      summary: Delete client
      operationId: ClientAuthController.deleteClient
      parameters:
        - in: path
          name: clientId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/team/invite:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Team
      summary: Invite member
      operationId: TeamController.inviteMember
      requestBody:
        description: InviteMemberReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteMemberReqDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MemberResDTO'
  /api/v1/team/members:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Team
      summary: List members
      operationId: TeamController.listMembers
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/MemberResDTO'
                type: array
  /api/v1/team/members/{id}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    delete:
      tags:
        - Team
      summary: Remove member
      operationId: TeamController.removeMember
      parameters:
        - in: path
          name: id
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/api_keys:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - API Keys
      summary: Generate api key
      operationId: APIKeysController.generateAPIKey
      requestBody:
        description: GenerateAPIKeyReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateAPIKeyReqDTO'
        required: true
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/APIKeyResDTO'
    get:
      tags:
        - API Keys
      summary: List api keys
      operationId: APIKeysController.listAPIKeys
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/APIKeyResDTO'
                type: array
  /api/v1/api_keys/{id}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    delete:
      tags:
        - API Keys
      summary: Delete api key
      operationId: APIKeysController.deleteAPIKey
      parameters:
        - in: path
          name: id
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '204':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/apps:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App
      summary: Get apps
      operationId: AppController.getApps
      description: Retrieve a list of all applications based on query parameters.
      parameters:
        - in: query
          name: category
          schema:
            description: Category of the app
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppListResDTO'
  /api/v1/apps/openapi/spec/add:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - App
      summary: Add open api spec
      operationId: AppController.addOpenAPISpec
      description: Add openapi spec tool
      requestBody:
        description: AddToolsRequestDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToolsRequestDTO'
        required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/apps/openapi/spec/list:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App
      summary: Get opena api specs
      operationId: AppController.getOpenaAPISpecs
      responses:
        '200':
          description: List of all openapi spec tools
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppListResDTO'
                type: array
  /api/v1/apps/openapi/spec/delete/{name}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    delete:
      tags:
        - App
      summary: Delete open api spec tool
      operationId: AppController.deleteOpenAPISpecTool
      parameters:
        - in: path
          name: name
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/apps/openapi/spec/logs/{name}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App
      summary: Get open api spec logs
      operationId: AppController.getOpenAPISpecLogs
      parameters:
        - in: path
          name: name
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/apps/custom-repo/add-repo:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - App
      summary: Add custom repo
      operationId: AppController.addCustomRepo
      requestBody:
        description: AddRepoURLReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRepoURLReqDTO'
        required: false
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/apps/{appName}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App
      summary: Get app
      operationId: AppController.getApp
      description: Get app details
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAppInfoResDTO'
  /api/v1/apps/sync:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - App
      summary: Sync apps
      operationId: AppController.syncApps
      description: Sync custom repo
      responses:
        '202':
          description: Successful response
          content:
            application/json: {}
  /api/v1/apps/custom-repo/get-repo:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App
      summary: Get custom repo
      operationId: AppController.getCustomRepo
      description: Get custom repo
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/integrations:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - App Connector
      summary: Create connector
      operationId: AppConnectorController.createConnector
      requestBody:
        description: CreateConnectorPayloadDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectorPayloadDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetConnectorInfoResDTO'
    get:
      tags:
        - App Connector
      summary: List global connectors
      operationId: AppConnectorController.listGlobalConnectors
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetConnectorListResDTO'
  /api/v1/integrations/{integrationId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App Connector
      summary: Get connector info
      operationId: AppConnectorController.getConnectorInfo
      parameters:
        - in: path
          name: integrationId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetConnectorInfoResDTO'
    patch:
      tags:
        - App Connector
      summary: Patch connector
      operationId: AppConnectorController.patchConnector
      parameters:
        - in: path
          name: integrationId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: PatchConnectorReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConnectorReqDTO'
        required: false
      responses:
        '204':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PatchConnectorResDTO'
    delete:
      tags:
        - App Connector
      summary: Delete connector
      operationId: AppConnectorController.deleteConnector
      parameters:
        - in: path
          name: integrationId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '204':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DeleteRowAPIDTO'
  /api/v1/integrations/{integrationId}/status:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - App Connector
      summary: Patch post connector
      operationId: AppConnectorController.patchPostConnector
      parameters:
        - in: path
          name: integrationId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: PatchConnectorReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConnectorReqDTO'
        required: false
      responses:
        '201':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PatchConnectorResDTO'
  /api/v1/actions:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Actions Controller V 1
      summary: List actions
      operationId: ActionsControllerV1.listActions
      parameters:
        - in: query
          name: appNames
          schema:
            description: Names of the apps
            type: string
        - in: query
          name: useCase
          schema:
            description: Use case
            type: string
        - in: query
          name: showEnabledOnly
          schema:
            description: Show enabled only
            type: boolean
        - in: query
          name: limit
          schema:
            description: Limit
            type: number
        - in: query
          name: apps
          schema:
            type: string
        - in: query
          name: actions
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: usecaseLimit
          schema:
            type: number
        - in: query
          name: filterImportantActions
          schema:
            type: boolean
        - in: query
          name: showAll
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionsListResponseDTO'
  /api/v1/actions/{actionId}/execute:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Actions Controller V 1
      summary: Execute action
      operationId: ActionsControllerV1.executeAction
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: ActionExecutionReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionExecutionReqDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionExecutionResDto'
  /api/v1/actions/proxy:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Actions Controller V 1
      summary: Execute action proxy
      operationId: ActionsControllerV1.executeActionProxy
      parameters:
        - in: query
          name: endpoint
          required: true
          schema:
            type: string
        - in: query
          name: connectedAccountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ExecuteActionResDTO'
  /api/v1/actions/{actionId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Actions Controller V 1
      summary: Get action
      operationId: ActionsControllerV1.getAction
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionDetails'
  /api/v1/connectedAccounts:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Connections
      summary: Get connections
      operationId: ConnectionsController.getConnections
      parameters:
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: pageSize
          schema:
            type: number
        - in: query
          name: appNames
          schema: {}
        - in: query
          name: integrationId
          schema:
            type: string
        - in: query
          name: connectionId
          schema:
            type: string
        - in: query
          name: user_uuid
          schema:
            type: string
        - in: query
          name: showActiveOnly
          schema:
            type: boolean
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: showDisabled
          schema:
            type: boolean
      responses:
        '200':
          description: Get all connections for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConnectionsResponseDto'
    post:
      tags:
        - Connections
      summary: Initiate connection
      operationId: ConnectionsController.initiateConnection
      requestBody:
        description: InitiateConnectionPayloadDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateConnectionPayloadDto'
        required: false
      responses:
        '200':
          description: >-
            Initiates a connection for the given integration and mark the
            connection status as initiated if the auth scheme is OAuth1 or
            OAuth2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateConnectionResponse'
  /api/v1/connectedAccounts/{connectedAccountId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Connections
      summary: Get connection
      operationId: ConnectionsController.getConnection
      parameters:
        - in: path
          name: connectedAccountId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Connections
      summary: Delete connection
      operationId: ConnectionsController.deleteConnection
      parameters:
        - in: path
          name: connectedAccountId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/connectedAccounts/{connectedAccountId}/disable:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Connections
      summary: Disable connection
      operationId: ConnectionsController.disableConnection
      parameters:
        - in: path
          name: connectedAccountId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json: {}
  /api/v1/connectedAccounts/{connectedAccountId}/enable:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Connections
      summary: Enable connection
      operationId: ConnectionsController.enableConnection
      parameters:
        - in: path
          name: connectedAccountId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '201':
          description: Successful response
          content:
            application/json: {}
  /api/v1/login/{appName}/auth:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App Login
      summary: Handle o auth 2 callback
      operationId: AppLoginController.handleOAuth2Callback
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
        - in: query
          name: redirectUri
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/login/{appName}/callback:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - App Login
      summary: Verify o auth 2 login
      operationId: AppLoginController.verifyOAuth2Login
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/triggers:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Triggers
      summary: List triggers
      operationId: TriggersController.listTriggers
      description: List triggers
      parameters:
        - in: query
          name: appNames
          schema:
            description: Names of the apps
            type: string
        - in: query
          name: connectedAccountIds
          schema:
            description: IDs of the connected accounts
            type: string
        - in: query
          name: triggerIds
          schema:
            description: IDs of the triggers
            type: string
        - in: query
          name: showEnabledOnly
          schema:
            description: Show enabled only
            type: boolean
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TriggerResDTO'
                type: array
  /api/v1/triggers/handle/{appName}/{clientId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Handle trigger
      operationId: TriggersController.handleTrigger
      parameters:
        - in: header
          name: ''
          required: false
          schema: {}
        - in: path
          name: appName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
        - in: path
          name: clientId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/triggers/enable/{connectedAccountId}/{triggerName}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Enable trigger
      operationId: TriggersController.enableTrigger
      description: Enables a trigger for a connected account and specific trigger name.
      parameters:
        - in: path
          name: connectedAccountId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
        - in: path
          name: triggerName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: EnableTriggerBodyDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableTriggerBodyDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerResponseDTO'
  /api/v1/triggers/get/{triggerId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Triggers
      summary: Get trigger
      operationId: TriggersController.getTrigger
      description: Retrieves a specific trigger by its ID.
      parameters:
        - in: path
          name: triggerId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/triggers/active_triggers:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Triggers
      summary: Get active triggers
      operationId: TriggersController.getActiveTriggers
      description: Lists active triggers based on query parameters.
      parameters:
        - in: query
          name: connectedAccountIds
          schema:
            description: IDs of the connected accounts
            type: string
        - in: query
          name: integrationIds
          schema:
            description: IDs of the integrations
            type: string
        - in: query
          name: triggerIds
          schema:
            description: IDs of the triggers
            type: string
        - in: query
          name: triggerNames
          schema:
            description: Names of the triggers
            type: string
        - in: query
          name: page
          schema:
            description: Page number
            type: number
        - in: query
          name: limit
          schema:
            description: Limit per page
            type: number
        - in: query
          name: showDisabled
          schema:
            description: Show disabled triggers
            type: boolean
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActiveTriggersResDTO'
  /api/v1/triggers/instance/{triggerId}/status:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    patch:
      tags:
        - Triggers
      summary: Switch trigger instance status
      operationId: TriggersController.switchTriggerInstanceStatus
      description: Switches the status of a trigger instance.
      parameters:
        - in: path
          name: triggerId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: SwitchTriggerStatusBodyDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchTriggerStatusBodyDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerResponseDTO'
    post:
      tags:
        - Triggers
      summary: Switch post trigger instance status
      operationId: TriggersController.switchPostTriggerInstanceStatus
      description: Switches the status of a trigger instance.
      parameters:
        - in: path
          name: triggerId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: SwitchTriggerStatusBodyDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchTriggerStatusBodyDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerResponseDTO'
  /api/v1/triggers/disable/{triggerInstanceId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Disable trigger
      operationId: TriggersController.disableTrigger
      description: Disables a specified trigger instance.
      parameters:
        - in: path
          name: triggerInstanceId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerResponseDTO'
  /api/v1/triggers/instance/{triggerInstanceId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    delete:
      tags:
        - Triggers
      summary: Delete trigger
      operationId: TriggersController.deleteTrigger
      description: Deletes a specified trigger instance.
      parameters:
        - in: path
          name: triggerInstanceId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DeleteRowAPIDTO'
  /api/v1/triggers/setCallbackURL:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Set callback url
      operationId: TriggersController.setCallbackUrl
      description: Sets a universal callback URL for the client.
      requestBody:
        description: ''
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/triggers/set_callback_url:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Set callback url
      operationId: TriggersController.set_callback_url
      description: Sets a universal callback URL for the client.
      requestBody:
        description: SetCallbackUrlBodyDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCallbackUrlBodyDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerResponseDTO'
  /api/v1/triggers/callback_url:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Triggers
      summary: Get webhook url
      operationId: TriggersController.getWebhookURL
      description: Retrieves the universal callback URL set for the client.
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/WebhookURLResponseDTO'
  /api/v1/triggers/logs:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Triggers
      summary: Get logs
      operationId: TriggersController.getLogs
      description: Fetches logs based on connection and integration details.
      parameters:
        - in: query
          name: connectionId
          schema:
            description: ID of the connection
            type: string
        - in: query
          name: integrationId
          schema:
            description: ID of the integration
            type: string
        - in: query
          name: page
          schema:
            description: Page number
            type: number
        - in: query
          name: limit
          schema:
            description: Limit per page
            type: number
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TriggerLogsResDTO'
  /api/v1/triggers/pusher:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Triggers
      summary: Handle pusher events
      operationId: TriggersController.handlePusherEvents
      requestBody:
        description: ''
        content:
          application/json:
            schema: {}
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/cli/sentry-dns:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Admin
      summary: Sentry dns
      operationId: AdminController.sentryDns
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/cli/generate-cli-session:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - CLI
      summary: Handle cli code exchange
      operationId: CLIController.handleCLICodeExchange
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GenerateCLISessionResDTO'
  /api/v1/cli/get-cli-code:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - CLI
      summary: Get cli code
      operationId: CLIController.getCLICode
      parameters:
        - in: query
          name: key
          required: true
          schema:
            description: Unique key for CLI session
            type: string
        - in: query
          name: code
          required: false
          schema:
            description: Code for CLI verification
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/GetCLISessionResDTO'
  /api/v1/cli/verify-cli-code:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - CLI
      summary: Handle cli code verification
      operationId: CLIController.handleCLICodeVerification
      parameters:
        - in: query
          name: key
          required: true
          schema:
            description: Unique key for CLI session
            type: string
        - in: query
          name: code
          required: false
          schema:
            description: Code for CLI verification
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/VerifyCLICodeResDTO'
  /api/v1/metadata:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Metadata
      summary: Get metadata
      operationId: MetadataController.getMetadata
      parameters:
        - in: query
          name: email
          required: true
          schema:
            description: Email of the client
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
    post:
      tags:
        - Metadata
      summary: Update metadata
      operationId: MetadataController.updateMetadata
      requestBody:
        description: MetadataReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataReqDTO'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/metadata/toggle/trigger:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Metadata
      summary: Toggle trigger state
      operationId: MetadataController.toggleTriggerState
      requestBody:
        description: TriggersEnabledToggleReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggersEnabledToggleReqDTO'
        required: false
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/metadata/toggle.info:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Metadata
      summary: Get toggle info
      operationId: MetadataController.getToggleInfo
      responses:
        '200':
          description: Successful response
          content:
            text/html; charset=utf-8: {}
  /api/v1/logs/:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Logs
      summary: Get logs
      operationId: LogsController.getLogs
      description: List logs
      parameters:
        - in: query
          name: type
          schema:
            description: Type of the log
            enum:
              - error
              - info
              - debug
            type: string
        - in: query
          name: time
          schema:
            description: Time interval for which data needs to be fetched
            enum:
              - 5m
              - 30m
              - 6h
              - 1d
              - 1w
              - 1month
              - 1y
            type: string
        - in: query
          name: status
          schema:
            description: Status of the log
            enum:
              - all
              - success
              - error
            type: string
        - in: query
          name: search
          schema:
            description: Search term in the log
            type: string
        - in: query
          name: integrationId
          schema:
            description: Integration UUID
            type: string
        - in: query
          name: limit
          schema:
            description: Limit of the logs
            type: number
            default: 10
        - in: query
          name: cursor
          schema:
            description: Cursor for pagination
            type: string
        - in: query
          name: connectionId
          schema:
            description: Connection ID of the log
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/LogsResDTO'
  /api/v2/actions:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Actions Controller V 2
      summary: List actions
      operationId: ActionsControllerV2.listActions
      description: Retrieve a list of all actions based on query parameters.
      parameters:
        - in: query
          name: appNames
          schema:
            description: Names of the apps
            type: string
        - in: query
          name: useCase
          schema:
            description: Use case
            type: string
        - in: query
          name: showEnabledOnly
          schema:
            description: Show enabled only
            type: boolean
        - in: query
          name: limit
          schema:
            description: Limit
            type: number
        - in: query
          name: apps
          schema:
            type: string
        - in: query
          name: actions
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: usecaseLimit
          schema:
            type: number
        - in: query
          name: filterImportantActions
          schema:
            type: boolean
        - in: query
          name: showAll
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionsListResponseDTO'
  /api/v2/actions/list/all:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Actions Controller V 2
      summary: List actions minimal
      operationId: ActionsControllerV2.listActionsMinimal
      description: Retrieve a list of all actions based on query parameters.
      parameters:
        - in: query
          name: appNames
          schema:
            description: Names of the apps
            type: string
        - in: query
          name: useCase
          schema:
            description: Use case
            type: string
        - in: query
          name: showEnabledOnly
          schema:
            description: Show enabled only
            type: boolean
        - in: query
          name: limit
          schema:
            description: Limit
            type: number
        - in: query
          name: apps
          schema:
            type: string
        - in: query
          name: actions
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: usecaseLimit
          schema:
            type: number
        - in: query
          name: filterImportantActions
          schema:
            type: boolean
        - in: query
          name: showAll
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionsListResponseDTO'
  /api/v2/actions/{actionId}/execute:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Actions Controller V 2
      summary: Execute action
      operationId: ActionsControllerV2.executeAction
      description: Execute an action. Support both connected account and no auth auth.
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      requestBody:
        description: ActionExecutionReqDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionExecutionReqDTO'
        required: false
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionExecutionResDto'
  /api/v2/actions/{actionId}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Actions Controller V 2
      summary: Get action
      operationId: ActionsControllerV2.getAction
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionDetails'
  /api/v2/actions/proxy:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    post:
      tags:
        - Actions Controller V 2
      summary: Execute action proxy
      operationId: ActionsControllerV2.executeActionProxy
      description: Execute an action with direct auth.
      parameters:
        - in: query
          name: endpoint
          required: true
          schema:
            type: string
        - in: query
          name: connectedAccountId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ActionExecutionResDto'
  /api/v2/triggers/{triggerName}:
    parameters:
      - name: x-api-key
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - Trigger Controller V 2
      summary: Get trigger info
      operationId: TriggerControllerV2.getTriggerInfo
      description: Get Trigger Info
      parameters:
        - in: path
          name: triggerName
          required: true
          schema:
            pattern: '[^\/#\?]+?'
            type: string
      responses:
        '200':
          description: ''
          content:
            text/html; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SingleTriggerResDTO'
                type: array
components:
  schemas:
    MagicLinkResDTO:
      properties:
        status:
          type: string
      type: object
      required:
        - status
    MagicLinkReqDTO:
      properties:
        email:
          description: The email of the user
          format: email
          type: string
        verifyHost:
          description: The frontend host of the user
          type: string
      type: object
      required:
        - email
        - verifyHost
    LogoutResDTO:
      properties:
        message:
          description: Message confirming the logout
          type: string
      type: object
      required:
        - message
    VerifyMagicLinkReqDTO:
      properties:
        token:
          description: The magic link token
          type: string
      type: object
      required:
        - token
    VerifyMagicLinkDataDTO:
      properties:
        clientId:
          type: string
        isValid:
          type: boolean
        jwtToken:
          type: string
        email:
          type: string
          format: email
      type: object
      required:
        - clientId
        - isValid
        - jwtToken
        - email
    VerifyMagicLinkResDTO:
      properties:
        message:
          description: Message indicating the result of the verification
          type: string
        data:
          description: >-
            Data containing client and token information if verification is
            successful
          $ref: '#/components/schemas/VerifyMagicLinkDataDTO'
      type: object
      required:
        - message
    IdentifyClientReqDTO:
      properties:
        hash:
          description: The hash of the client
          type: string
        framework:
          description: The framework used by the client
          type: string
      type: object
      required:
        - hash
    IdentifyClientResDTO:
      properties:
        clientId:
          description: The client ID
          type: string
        apiKey:
          description: The API key associated with the client
          type: string
        email:
          description: The email associated with the client
          type: string
      type: object
      required:
        - clientId
        - apiKey
        - email
    UserGitUserInfo:
      properties:
        name:
          type: string
        email:
          format: email
          type: string
      type: object
      required:
        - email
    TrackClientReqDTO:
      properties:
        framework:
          description: The framework used by the client
          type: string
        mac_address:
          description: The MAC address of the client device
          type: string
        user_git_user_info:
          description: User Git information
          $ref: '#/components/schemas/UserGitUserInfo'
      type: object
      required:
        - framework
    TrackClientResDTO:
      properties:
        message:
          description: Message indicating the result of the tracking operation
          type: string
      type: object
      required:
        - message
    DeleteRowAPIDTO:
      properties:
        status:
          description: Status of the delete operation
          type: string
        count:
          description: Number of records deleted
          type: number
      type: object
      required:
        - status
        - count
    InviteMemberReqDTO:
      properties:
        email:
          description: The email of the member
          format: email
          type: string
        name:
          description: The name of the member
          type: string
        verifyHost:
          description: The host to verify the member
          type: string
      type: object
      required:
        - email
        - name
        - verifyHost
    MemberResDTO:
      properties:
        email:
          description: The email of the member
          type: string
        id:
          description: The uuid identifier for the member
          type: string
        name:
          description: The name of the member
          type: string
        createdAt:
          description: The creation date of the member record
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
        updatedAt:
          description: The last update date of the member record
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
      type: object
      required:
        - email
        - id
        - name
    GenerateAPIKeyReqDTO:
      properties:
        name:
          description: The name of the API key to be generated
          type: string
      type: object
      required:
        - name
    APIKeyResDTO:
      properties:
        id:
          description: The ID of the API key
          type: string
        name:
          description: The name of the API key
          type: string
        createdAt:
          description: The creation date of the API key
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
        updatedAt:
          description: The last update date of the API key
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
        key:
          description: The generated API key
          type: string
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - key
    DeleteAPIKeyReqDTO:
      properties:
        id:
          description: The ID of the API key to be deleted
          type: string
      type: object
      required:
        - id
    SingleAppInfoResDTO:
      properties:
        description:
          description: The description of the app
          type: string
        appId:
          description: The unique identifier for the app
          type: string
        key:
          description: The key of the app
          type: string
        name:
          description: The name of the app
          type: string
        logo:
          description: The logo of the app
          type: string
        categories:
          description: The categories of the app
          items:
            type: string
          type: array
        path:
          description: The path of the app
          type: string
        docs:
          description: The documentation URL of the app
          type: string
        configuration_docs_text:
          description: The configuration documentation text of the app
          type: string
        status:
          description: The status of the app
          type: string
        documentation_doc_text:
          description: The documentation text of the app
          type: string
        testConnectors:
          description: The test connectors of the app
          items: {}
          type: array
        no_auth:
          description: Indicates if the app has no authentication
          type: boolean
        auth_schemes:
          description: The authentication schemes of the app
          items: {}
          type: array
        meta:
          description: The metadata of the app
        yaml:
          description: The yaml of the app
      type: object
      required:
        - appId
        - key
        - name
        - description
    AddToolsReqDTO:
      properties:
        name:
          description: The name of the tool
          type: string
        openApiSpecYaml:
          description: The OpenAPI specification in YAML format
          type: string
        integrationYaml:
          description: The integration details in YAML format
          type: string
      type: object
      required:
        - name
        - openApiSpecYaml
        - integrationYaml
    OpenAPISpecListResDTO:
      properties:
        id:
          description: Unique identifier for the OpenAPI spec
          type: string
        name:
          description: Name of the OpenAPI spec
          type: string
        clientId:
          description: Client identifier
          type: string
        openApiSpec:
          description: OpenAPI specification in YAML format
          type: string
        integrationYaml:
          description: Integration details in YAML format
          type: string
        enabled:
          description: Whether the OpenAPI spec is enabled
          type: boolean
        openAPISpecURL:
          description: URL to the OpenAPI specification
          type: string
          format: uri
          nullable: true
        integrationYAMLURL:
          description: URL to the integration YAML
          type: string
          format: uri
          nullable: true
        lastSyncAt:
          description: Last synchronization date and time
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        createdAt:
          description: Creation date and time
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        updatedAt:
          description: Last update date and time
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        jobStatus:
          description: The job status of the app
          enum:
            - running
            - success
            - failed
          type: string
      type: object
      required:
        - id
        - name
        - clientId
        - openApiSpec
        - integrationYaml
        - enabled
        - lastSyncAt
        - createdAt
        - updatedAt
    AddRepoURLResDTO:
      properties:
        repoUrl:
          description: Repository URL
          type: string
      type: object
      required:
        - repoUrl
    DeleteToolsReqDTO:
      properties:
        name:
          description: Name of the tool
          type: string
      type: object
      required:
        - name
    DeleteToolsResDTO:
      properties:
        message:
          description: Message indicating successful deletion of tools
          type: string
      type: object
      required:
        - message
    AddToolsRequestDTO:
      properties:
        name:
          description: The name of the tool
          type: string
        open_api_spec_yaml:
          description: The OpenAPI specification in YAML format
          type: string
        integration_yaml:
          description: The integration details in YAML format
          type: string
      type: object
      required:
        - name
        - open_api_spec_yaml
        - integration_yaml
    AddRepoURLReqDTO:
      properties:
        repoUrl:
          description: Repository URL
          type: string
      type: object
      required:
        - repoUrl
    AppQueryDTO:
      properties:
        category:
          description: Category of the app
          type: string
      type: object
    AppInfoResponseDto:
      properties:
        description:
          description: The description of the app
          type: string
        appId:
          description: The ID of the app
          type: string
        key:
          description: The key of the app
          type: string
        name:
          description: The name of the app
          type: string
        logo:
          description: The logo of the app
          type: string
        categories:
          description: The categories of the app
          items: {}
          type: string
        enabled:
          description: Indicates if the app is enabled
          type: boolean
        no_auth:
          description: Indicates if the app has no authentication
          type: boolean
      type: object
      required:
        - appId
        - key
        - name
        - description
        - logo
        - categories
        - enabled
    AppListResDTO:
      properties:
        items:
          description: List of app details
          items:
            $ref: '#/components/schemas/AppInfoResponseDto'
          type: array
        totalPages:
          description: Total number of pages
          type: number
      type: object
      required:
        - items
        - totalPages
    GetConnectorInfoResDTO:
      properties:
        id:
          description: Unique identifier of the connector
          type: string
        authScheme:
          description: Authentication scheme used by the connector
          type: string
        name:
          description: Name of the connector
          type: string
        createdAt:
          description: Creation date of the connector
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
        updatedAt:
          description: Last update date of the connector
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
        enabled:
          description: Flag to indicate if the connector is currently enabled
          type: boolean
        deleted:
          description: Flag to indicate if the connector has been deleted
          type: boolean
        appId:
          description: Application ID associated with the connector
          type: string
        defaultConnectorId:
          description: Default connector ID if one exists
          type: string
        authConfig:
          description: Authentication configuration with sensitive data obscured
          type: object
        expectedInputFields:
          description: List of required fields expected from the customer
          items:
            type: string
          type: array
        logo:
          description: Logo URL of the application associated with the connector
          type: string
        appName:
          description: Name of the application associated with the connector
          type: string
        useComposioAuth:
          description: Flag to indicate if Composio authentication is used
          type: boolean
      type: object
      required:
        - enabled
        - appId
        - authConfig
        - expectedInputFields
        - logo
        - appName
        - useComposioAuth
    AuthConfigDTO:
      properties:
        scopes:
          items:
            type: string
          type: array
        user_scopes:
          items:
            type: string
          type: array
      type: object
    CreateConnectorPayloadDTO:
      properties:
        name:
          description: Name of the connector
          type: string
        authScheme:
          description: Authentication scheme
          type: string
        authConfig:
          description: Authentication configuration
          $ref: '#/components/schemas/AuthConfigDTO'
        useComposioAuth:
          description: Flag to indicate if Composio authentication should be used
          type: boolean
          anyOf:
            - type: boolean
        appId:
          description: Application ID
          type: string
        forceNewIntegration:
          description: Flag to force new integration
          type: boolean
      type: object
      required:
        - name
        - appId
    PatchConnectorReqDTO:
      properties:
        authConfig:
          description: Authentication configuration for the connector
          type: object
        enabled:
          description: Flag to indicate if the connector is enabled
          type: boolean
      type: object
    PatchConnectorResDTO:
      properties:
        status:
          description: Status of the patch operation
          type: string
      type: object
      required:
        - status
    ConnectorListItemDTO:
      properties:
        appName:
          description: Application name associated with the connector
          type: string
        _count:
          description: Count of connections for the connector
          type: object
        connections:
          description: List of connections with their details and request logs count
          items: {}
          type: array
        id:
          description: Unique identifier of the connector
          type: string
        name:
          description: Name of the connector
          type: string
        authScheme:
          description: Authentication scheme used by the connector
          type: string
        createdAt:
          description: Creation date of the connector
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          description: Last update date of the connector
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        enabled:
          description: Flag to indicate if the connector is enabled
          type: boolean
        deleted:
          description: Flag to indicate if the connector is deleted
          type: boolean
        appId:
          description: App ID associated with the connector
          type: string
        defaultConnectorId:
          description: Default connector ID if available
          type: string
      type: object
      required:
        - appName
        - _count
        - connections
        - id
        - name
        - authScheme
        - createdAt
        - updatedAt
        - enabled
        - appId
    GetConnectorListResDTO:
      properties:
        items:
          description: List of connectors
          items: {}
          type: array
        totalPages:
          description: Total number of pages available
          type: number
        page:
          description: Current page number
          type: number
      type: object
      required:
        - items
        - totalPages
        - page
    PageInfo:
      properties:
        total:
          minimum: 0
          type: integer
        page:
          minimum: 1
          type: integer
        pageSize:
          minimum: 1
          type: integer
        totalPages:
          minimum: 1
          type: integer
      type: object
      required:
        - total
        - page
        - pageSize
        - totalPages
    ConnectionWithAppData:
      properties:
        id:
          type: string
        integrationId:
          type: string
        clientUniqueUserId:
          type: string
        status:
          type: string
        data:
          type: object
        deleted:
          type: boolean
        enabled:
          type: boolean
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        appUniqueId:
          type: string
        appName:
          type: string
        logo:
          type: string
        authConfig:
          type: object
      type: object
      required:
        - id
        - integrationId
        - status
        - createdAt
        - updatedAt
        - appUniqueId
        - appName
    GetConnectionsResult:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/ConnectionWithAppData'
          type: array
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
      type: object
      required:
        - connections
        - pageInfo
    ToolsExecuteReqDto:
      properties:
        actionName:
          type: string
        runInSandbox:
          type: boolean
        input:
          type: object
        nlaInput:
          type: string
        authorizationData:
          type: object
        appSchema:
          type: object
      type: object
      required:
        - actionName
        - runInSandbox
        - input
    DirectExecuteReqDto:
      properties:
        endpoint:
          type: string
        base_url:
          type: string
        headers:
          type: object
        queryParams:
          type: object
      type: object
      required:
        - endpoint
        - base_url
        - headers
        - queryParams
    ActionExecutionResDto:
      properties:
        data:
          type: object
        error:
          type: string
        successfull:
          type: string
      type: object
      required:
        - data
    ActionExecutionReqDTO:
      properties:
        connectedAccountId:
          type: string
        appName:
          type: string
        entityId:
          type: string
        endpoint:
          type: string
        input:
          type: object
        text:
          type: string
      type: object
    ProxyExecutionReqDTO:
      properties:
        endpoint:
          type: string
        connectedAccountId:
          type: string
      type: object
      required:
        - endpoint
        - connectedAccountId
    ActionExecutionResDTO:
      properties:
        connectedAccountId:
          type: string
        appName:
          type: string
        entityId:
          type: string
        endpoint:
          type: string
        input:
          type: object
        text:
          type: string
      type: object
    ActionDetailsMinimal:
      properties:
        tags:
          items:
            type: string
          type: array
        description:
          type: string
        appId:
          type: string
        appKey:
          type: string
        appName:
          type: string
        displayName:
          type: string
        enabled:
          type: boolean
        logo:
          type: string
        name:
          type: string
      type: object
      required:
        - appKey
        - appName
        - description
        - displayName
        - enabled
        - logo
        - name
        - tags
    ActionDetails:
      properties:
        tags:
          items:
            type: string
          type: array
        description:
          type: string
        parameters:
          type: object
        response:
          type: object
        appId:
          type: string
        appKey:
          type: string
        appName:
          type: string
        displayName:
          type: string
        enabled:
          type: boolean
        logo:
          type: string
        name:
          type: string
      type: object
      required:
        - parameters
        - response
        - appKey
        - appName
        - description
        - displayName
        - enabled
        - logo
        - name
        - tags
    ActionsListResponseDTO:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ActionDetails'
          type: array
        page:
          type: number
        totalPages:
          type: number
      type: object
      required:
        - items
        - page
        - totalPages
    ActionsMinimalListResponseDTO:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ActionDetailsMinimal'
          type: array
        page:
          type: number
        totalPages:
          type: number
      type: object
      required:
        - items
        - page
        - totalPages
    ExecuteActionResDTO:
      properties:
        response_data:
          description: Indicates if the action was executed successfully
          type: boolean
        execution_details:
          description: Details of the execution status
          type: object
      type: object
      required:
        - response_data
        - execution_details
    ActionsQueryDTO:
      properties:
        tags:
          type: string
        appNames:
          description: Names of the apps
          type: string
        useCase:
          description: Use case
          type: string
        showEnabledOnly:
          description: Show enabled only
          type: boolean
        limit:
          description: Limit
          type: number
        apps:
          type: string
        actions:
          type: string
        usecaseLimit:
          type: number
        filterImportantActions:
          type: boolean
        showAll:
          type: boolean
      type: object
    ActionsControllerV1:
      properties:
        getAction:
          items: {}
          type: array
      type: object
      required:
        - getAction
    ConnectionParams:
      properties:
        integrationId:
          type: string
        connectionParams:
          type: object
        isDisabled:
          type: boolean
        invocationCount:
          type: number
        id:
          type: string
        clientUniqueUserId:
          type: string
        status:
          type: string
        data:
          type: object
        deleted:
          type: boolean
        enabled:
          type: boolean
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        appUniqueId:
          type: string
        appName:
          type: string
        logo:
          type: string
        authConfig:
          type: object
      type: object
      required:
        - integrationId
        - isDisabled
        - invocationCount
        - id
        - status
        - createdAt
        - updatedAt
        - appUniqueId
        - appName
    GetConnectionsResponseDto:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectionParams'
          type: array
        totalPages:
          type: number
        page:
          type: number
      type: object
      required:
        - items
        - totalPages
        - page
    GetConnectionsQueryDto:
      properties:
        page:
          type: number
        pageSize:
          type: number
        appNames: {}
        integrationId:
          type: string
        connectionId:
          type: string
        user_uuid:
          type: string
        showActiveOnly:
          type: boolean
        status:
          type: string
        showDisabled:
          type: boolean
      type: object
    InitiateConnectionPayloadDto:
      properties:
        data:
          type: string
          minLength: 1
        integrationId:
          minLength: 1
          type: string
        redirectUri:
          type: string
        userUuid:
          type: string
      type: object
      required:
        - integrationId
    InitiateConnectionResponse:
      properties:
        connectionStatus:
          minLength: 1
          type: string
        connectedAccountId:
          minLength: 1
          type: string
      type: object
      required:
        - connectionStatus
        - connectedAccountId
    OAuth2CallbackQueryDto:
      properties:
        state:
          type: string
      type: object
      required:
        - state
    RedirectUriDTO:
      properties:
        redirectUri:
          type: string
      type: object
    ListTriggersQueryDTO:
      properties:
        appNames:
          description: Names of the apps
          type: string
        connectedAccountIds:
          description: IDs of the connected accounts
          type: string
        triggerIds:
          description: IDs of the triggers
          type: string
        showEnabledOnly:
          description: Show enabled only
          type: boolean
      type: object
    GetActiveTriggersQueryDTO:
      properties:
        connectedAccountIds:
          description: IDs of the connected accounts
          type: string
        integrationIds:
          description: IDs of the integrations
          type: string
        triggerIds:
          description: IDs of the triggers
          type: string
        triggerNames:
          description: Names of the triggers
          type: string
        page:
          description: Page number
          type: number
        limit:
          description: Limit per page
          type: number
        showDisabled:
          description: Show disabled triggers
          type: boolean
      type: object
    GetLogsQueryDTO:
      properties:
        connectionId:
          description: ID of the connection
          type: string
        integrationId:
          description: ID of the integration
          type: string
        page:
          description: Page number
          type: number
        limit:
          description: Limit per page
          type: number
      type: object
    TriggerResDTO:
      properties:
        description:
          description: Trigger description
          type: string
        name:
          description: Trigger name
          type: string
        display_name:
          description: Trigger display name
          type: string
        enabled:
          description: Is trigger enabled
          type: boolean
        config:
          description: Trigger configuration
          type: object
        payload:
          description: Trigger payload
          type: object
        logo:
          description: Trigger logo URL
          type: string
        count:
          description: Trigger count
          type: number
        appKey:
          description: App key
          type: string
        appId:
          description: App ID
          type: string
        appName:
          description: App name
          type: string
        instructions:
          description: Trigger instructions
          type: string
        type:
          description: Trigger type
          type: string
      type: object
      required:
        - name
        - display_name
        - appKey
        - appId
        - appName
    SingleTriggerResDTO:
      properties:
        description:
          description: Trigger description
          type: string
        name:
          description: Trigger name
          type: string
        displayName:
          description: Trigger display name
          type: string
        type:
          description: Trigger type
          type: string
        appId:
          description: App ID
          type: string
        appName:
          description: App name
          type: string
        instructions:
          description: Trigger instructions
          type: string
        payload:
          description: Trigger payload
          type: object
        config:
          description: Trigger config
          type: object
      type: object
      required:
        - name
        - displayName
        - description
        - type
        - appId
        - appName
        - payload
        - config
    TriggerConfig:
      properties:
        repo:
          description: Repository name
          type: string
        owner:
          description: Repository owner
          type: string
      type: object
      required:
        - repo
        - owner
    ActiveTriggerInstance:
      properties:
        id:
          description: Trigger instance ID
          type: string
        connectionId:
          description: Connected account ID
          type: string
        triggerName:
          description: Trigger name
          type: string
        triggerData:
          description: Trigger data
          type: string
        triggerConfig:
          description: Trigger configuration
          $ref: '#/components/schemas/TriggerConfig'
        createdAt:
          description: Created at timestamp
          type: string
          format: date-time
        updatedAt:
          description: Updated at timestamp
          type: string
          format: date-time
        disabledAt:
          description: Disabled at timestamp
          type: string
          format: date-time
          nullable: true
      type: object
      required:
        - connectionId
        - triggerName
        - triggerConfig
        - createdAt
        - updatedAt
    PageInfoDTO:
      properties:
        currentPage:
          type: number
        perPage:
          type: number
        totalPages:
          type: number
      type: object
      required:
        - currentPage
        - perPage
        - totalPages
    ActiveTriggersResDTO:
      properties:
        triggers:
          items: {}
          type: array
        pageInfo:
          items:
            $ref: '#/components/schemas/PageInfoDTO'
          type: array
      type: object
      required:
        - triggers
        - pageInfo
    TriggerLogsResDTO:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TriggerLogItemDTO'
          type: array
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
      type: object
      required:
        - data
        - pageInfo
    TriggerLogItemDTO:
      properties:
        clientId:
          description: Client ID
          type: string
        connectionId:
          description: Connection ID
          type: string
        errorTrigger:
          description: Error trigger
          type: string
          nullable: true
        triggerClientError:
          description: Trigger client error
          type: string
          nullable: true
        triggerClientPayload:
          description: Trigger client payload
          type: string
          nullable: true
        triggerProviderPayload:
          description: Trigger provider payload
          type: string
          nullable: true
        triggerName:
          description: Trigger name
          type: string
          nullable: true
        id:
          description: Log ID
          type: string
        appKey:
          description: App key
          type: string
        createdAt:
          description: Created at timestamp
          type: string
          format: date-time
      type: object
      required:
        - clientId
        - connectionId
        - id
        - appKey
        - createdAt
    HandleTriggerParamsDTO:
      properties:
        appName:
          description: The name of the app
          type: string
        clientId:
          description: The client ID
          type: string
      type: object
      required:
        - appName
        - clientId
    HandleTriggerBodyDTO:
      properties:
        body:
          description: The trigger payload
          type: object
      type: object
      required:
        - body
    EnableTriggerParamsDTO:
      properties:
        connectedAccountId:
          description: The connected account ID
          type: string
        triggerName:
          description: The trigger name
          type: string
      type: object
      required:
        - connectedAccountId
        - triggerName
    GetTriggerParamsDTO:
      properties:
        triggerId:
          description: The connected account ID
          type: string
      type: object
      required:
        - triggerId
    EnableTriggerBodyDTO:
      properties:
        triggerConfig:
          description: The trigger configuration
          type: object
      type: object
      required:
        - triggerConfig
    SwitchTriggerStatusParamsDTO:
      properties:
        triggerId:
          description: The trigger instance ID
          type: string
      type: object
      required:
        - triggerId
    SwitchTriggerStatusBodyDTO:
      properties:
        enabled:
          description: The new enabled status of the trigger
          type: boolean
      type: object
      required:
        - enabled
    TriggerInstanceParamsDTO:
      properties:
        triggerInstanceId:
          description: The trigger instance ID
          type: string
      type: object
      required:
        - triggerInstanceId
    SetCallbackUrlBodyDTO:
      properties:
        callbackURL:
          description: The callback URL
          type: string
      type: object
      required:
        - callbackURL
    TriggerResponseDTO:
      properties:
        status:
          description: The status of the operation
          type: string
        message:
          description: Optional message
          type: string
        triggerId:
          description: Optional trigger ID
          type: string
      type: object
      required:
        - status
    WebhookURLResponseDTO:
      properties:
        status:
          description: The status of the operation
          type: string
        callbackURL:
          description: The callback URL if found
          type: string
      type: object
      required:
        - status
    GenerateCLISessionReqDTO:
      properties:
        channel_name:
          description: The channel name for the CLI session
          type: string
      type: object
      required:
        - channel_name
    LoginAccountAsAdminReqDTO:
      properties:
        email:
          description: Email of the client
          type: string
        apiKey:
          description: API Key of the client
          type: string
        adminToken:
          description: Admin token
          type: string
      type: object
      required:
        - adminToken
    GenerateCLISessionResDTO:
      properties:
        key:
          description: The key for the CLI session
          type: string
      type: object
      required:
        - key
    GetCLISessionResDTO:
      properties:
        clientId:
          description: The client ID
          type: string
        cliCode:
          description: The CLI code
          type: string
      type: object
      required:
        - clientId
        - cliCode
    VerifyCLICodeResDTO:
      properties:
        clientId:
          description: The client ID
          type: string
        cliCode:
          description: The CLI code
          type: string
        apiKey:
          description: The API key associated with the client
          type: string
      type: object
      required:
        - clientId
        - cliCode
        - apiKey
    CLIQueryDTO:
      properties:
        key:
          description: Unique key for CLI session
          type: string
        code:
          description: Code for CLI verification
          type: string
      type: object
      required:
        - key
    MetadataReqDTO:
      properties:
        email:
          description: The email associated with the metadata request
          type: string
        metadata:
          description: Additional metadata as a key-value pair
      type: object
      required:
        - email
    TriggersEnabledToggleReqDTO:
      properties:
        enabled:
          description: Flag to enable or disable triggers
          type: boolean
      type: object
      required:
        - enabled
    TriggersEnabledToggleResDTO:
      properties:
        message:
          description: Message indicating the result of the toggle operation
          type: string
      type: object
      required:
        - message
    MetadataQueryDTO:
      properties:
        email:
          description: Email of the client
          type: string
      type: object
      required:
        - email
    TriggerMetadata:
      properties:
        id:
          description: The unique id of the log
          type: string
        type:
          description: The type of the log
          type: string
          oneOf:
            - type: string
              enum:
                - trigger
        createdAt:
          description: The date and time when the log was created
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        updatedAt:
          description: The date and time when the log was updated
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        provider:
          description: The provider of the log
          type: string
        clientId:
          description: The client uuid of the log
          type: string
        connectionId:
          description: The connection id of the log
          type: string
        triggerProviderPayload:
          description: The trigger provider payload of the log
          type: string
        triggerClientPayload:
          type: string
        triggerClientError:
          description: The trigger client error of the log
          type: string
        triggerName:
          description: The trigger name of the log
          type: string
        triggerClientResponse:
          description: The trigger client response of the log
          type: string
      type: object
      required:
        - id
        - type
        - createdAt
        - updatedAt
        - provider
        - clientId
        - connectionId
    ActionMetadata:
      properties:
        id:
          description: The unique id of the log
          type: string
        request:
          description: The request sent to the provider
          type: string
        response:
          description: The response from the provider
          type: string
        errorRequest:
          description: The error request sent to the provider
          type: string
        type:
          description: The type of the log
          type: string
          oneOf:
            - type: string
              enum:
                - action
        createdAt:
          description: The date and time when the log was created
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        updatedAt:
          description: The date and time when the log was updated
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        provider:
          description: The provider of the log
          type: string
        clientId:
          description: The client uuid of the log
          type: string
        connectionId:
          description: The connection id of the log
          type: string
        actionName:
          description: The action name of the log
          type: string
      type: object
      required:
        - id
        - request
        - type
        - createdAt
        - updatedAt
        - provider
        - clientId
        - connectionId
        - actionName
    TriggerLogData:
      properties:
        id:
          description: The unique identifier of the trigger log
          type: string
        connectionId:
          description: The connection identifier associated with the trigger log
          type: string
        clientId:
          description: The client identifier associated with the trigger log
          type: string
        status:
          description: The status of the trigger log
          type: string
        appName:
          description: The name of the application associated with the trigger log
          type: string
        createdAt:
          description: The creation date and time of the trigger log
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        type:
          description: The type of the log
          type: string
          oneOf:
            - type: string
              enum:
                - trigger
        meta:
          description: Metadata associated with the trigger log
          $ref: '#/components/schemas/TriggerMetadata'
      type: object
      required:
        - id
        - connectionId
        - clientId
        - status
        - appName
        - createdAt
        - type
        - meta
    ActionLogData:
      properties:
        id:
          description: The unique identifier of the action log
          type: string
        connectionId:
          description: The connection identifier associated with the action log
          type: string
        clientId:
          description: The client identifier associated with the action log
          type: string
        status:
          description: The status of the action log
          type: string
        appName:
          description: The name of the application associated with the action log
          type: string
        createdAt:
          description: The creation date and time of the action log
          pattern: \d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+Z?
          type: string
          format: date-time
        type:
          description: The type of the log
          type: string
          oneOf:
            - type: string
              enum:
                - action
        meta:
          description: Metadata associated with the action log
          $ref: '#/components/schemas/ActionMetadata'
      type: object
      required:
        - id
        - connectionId
        - clientId
        - status
        - appName
        - createdAt
        - type
        - meta
    LogsResDTO:
      properties:
        nextCursor:
          description: The cursor to get the next page of logs
          type: string
        data:
          description: Logs data
          items: {}
          type: array
      type: object
      required:
        - data
    GetLogsDTO:
      properties:
        type:
          description: Type of the log
          enum:
            - error
            - info
            - debug
          type: string
        time:
          description: Time interval for which data needs to be fetched
          enum:
            - 5m
            - 30m
            - 6h
            - 1d
            - 1w
            - 1month
            - 1y
          type: string
        status:
          description: Status of the log
          enum:
            - all
            - success
            - error
          type: string
        search:
          description: Search term in the log
          type: string
        integrationId:
          description: Integration UUID
          type: string
        limit:
          description: Limit of the logs
          type: number
          default: 10
        cursor:
          description: Cursor for pagination
          type: string
        connectionId:
          description: Connection ID of the log
          type: string
      type: object
